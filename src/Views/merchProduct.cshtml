@inherits MerchKit.Mvc.MerchKitTemplatePage
@using Merchello.Web.Models.ContentEditing
@using MerchKit
@{
    Layout = "merchBase.cshtml";

    var product = CurrentPage.WillWork("merchelloProduct") ?
        (ProductDisplay) Merchello.Product(CurrentPage.GetPropertyValue("merchelloProduct")) :
        new ProductDisplay();

    var current = CurrentPage as IPublishedContent;

    var kittenHeight = NoWhammyStop.Next(500, 700);
}

<section id="primary">
    @*Display the Main Image*@
    @if (CurrentPage.HasProperty("mainImage") && CurrentPage.HasValue("mainImage"))
    {
        IPublishedContent image = Umbraco.Media(CurrentPage.GetPropertyValue("mainImage"));

        @*Feed in view data to the partial view*@
        var viewData = new ViewDataDictionary(ViewData)
            {
                {"Image", image},
                {"Height", -1},
                {"Width", 1030},
                {"CSS", "main-image"}
            };
    
        @Html.Partial("merchRenderImage", viewData)
    }
    else
    {
        <img src="http://placekitten.com/1030/@kittenHeight" alt="Kitten!" class="main-image" />
    }

    <section class="info">
        @*Render the price*@
        @*TODO Connect to the ProductVariantApiController via javascript so the price switches on dropdown selection*@
        @if (product.IsProduct())
        {
            <h2 class="price" id="ProductPrice">@product.Price.ToString("C")</h2>
        }

        @*Render the name*@
        <h1>@CurrentPage.Name</h1>
                 
        @if (product.IsProduct())
        { 
            @Html.Action("RenderAddToCart", "Basket", new { area = "MerchKit", product })
        }
        
        @*Display the description and features*@
        @if(CurrentPage.HasValue("bodyText") || CurrentPage.HasValue("features"))
        {
            <section class="description closed">
                @CurrentPage.bodyText
                
                @if(CurrentPage.HasValue("features")){
                    <ul class="features">
                    @foreach (var feature in Model.Content.MultiLineTextStringToList("features"))
                    {
                        <li>@feature</li>
                    }
                    </ul>
                }
            </section>
            if(current.GetPropertyValue("bodyText").ToString().Length > 320 || CurrentPage.WillWork("features"))
            {
            <button class="toggle" type="button">@Umbraco.GetDictionaryValue("merchMoreLabel")</button>
            }
        }
    </section>

</section>

@*Render Additional Images if there are any*@
@if(CurrentPage.HasProperty("additionalImages") && CurrentPage.HasValue("additionalImages"))
{
<ul class="additional-images">
    @{
        var images = current.GetPropertyValue("additionalImages").ToString().Split(',');
        foreach (var img in images)
        {
            IPublishedContent image = Umbraco.Media(img);

            @*Feed in view data to the partial view*@
            var viewData = new ViewDataDictionary(ViewData)
                {
                    {"Image", image},
                    {"Height", -1},
                    {"Width", img == images.FirstOrDefault() ? 1900 : 950}
                };
                
                <li>@Html.Partial("merchRenderImage", viewData)</li>
        }
    }
</ul>
}

<a href="#top" class="arrow up"><i class="fa fa-angle-up"></i></a>

@*Render any related products*@
@if (CurrentPage.HasProperty("relatedProducts") && CurrentPage.HasValue("relatedProducts"))
{
    <ul class="related-products">
        @*Get the Umbraco Dictionary item for Related Products*@
        <li>@Umbraco.GetDictionaryValue("merchRelatedProductsLabel")</li>

        @*Display the product thumbnails*@
        @foreach(IPublishedContent rp in current.MntpToPublishedContentList(UmbracoContext, "relatedProducts"))
        {
			//A hack for the starter kit to get the kittens to show at different heights if there are no images
            var kittenWidth = NoWhammyStop.Next(150, 300);
			
            //var img = Umbraco.Media(rp.GetPropertyValue("thumbnail"));
            <li>
                <a href="@rp.Url">
					@if(rp.WillWork("thumbnail"))
                    {
                        IPublishedContent image = Umbraco.Media(rp.GetPropertyValue("thumbnail"));
                        @*Feed in view data to the partial view*@
                        var viewData = new ViewDataDictionary(ViewData)
                            {
                                {"Image", image},
                                {"Height", -1},
                                {"Width", 572}
                            };
    
                        @Html.Partial("merchRenderImage", viewData)
                    }
                    else
                    {
                        <img src="http://placekitten.com/@kittenWidth/200" />
                    }
                    <div class="info">
                        <div class="wrapper">
                            <h3>@rp.Name</h3>
                            <p class="price details">
                                @*show price if product is connected in Merchello*@
                                @if(rp.HasProperty("merchelloProduct") && rp.HasValue("merchelloProduct")){    
                                    @*Show "from" if product has variants, otherwise just display the price*@
                                    @(rp.GetProduct("merchelloProduct").ProductVariants.Any() ? MvcHtmlString.Create("<em>from</em> ") : MvcHtmlString.Empty) @rp.GetProduct("merchelloProduct").Price.ToString("C")
                                @*Show text for product details if not connected in Merchello*@
                                } else {
                                    <em>view product info</em>
                                }
                            </p>
                        </div>
                    </div>
                </a>
            </li>
        }
    </ul>
}