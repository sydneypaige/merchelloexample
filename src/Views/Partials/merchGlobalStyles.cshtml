@inherits MerchKit.Mvc.MerchKitTemplatePage
@{

    var backgroundColor = string.Empty;
    if (HomePage.HasValue("backgroundColor") && HomePage.GetPropertyValue<string>("backgroundColor") == "0") { backgroundColor = "#000"; } else if(HomePage.HasValue("backgroundColor")) { backgroundColor = "#" + HomePage.GetPropertyValue("backgroundColor").ToString(); }
    
    var primaryColor = string.Empty;
    if (HomePage.HasValue("primaryColor") && HomePage.GetPropertyValue<string>("primaryColor") == "0") { primaryColor = "#000"; } else if (HomePage.HasValue("primaryColor")) { primaryColor = "#" + HomePage.GetPropertyValue("primaryColor").ToString(); }
    
    var textColor = string.Empty;
    if (HomePage.HasValue("textColor") && HomePage.GetPropertyValue<string>("textColor") == "0") { textColor = "#000"; } else if (HomePage.HasValue("textColor")) { textColor = "#" + HomePage.GetPropertyValue("textColor").ToString(); }

    var linkColor = string.Empty;
    if (HomePage.HasValue("linkColor") && HomePage.GetPropertyValue<string>("linkColor") == "0") { linkColor = "#000"; } else if (HomePage.HasValue("linkColor")) { linkColor = "#" + HomePage.GetPropertyValue("linkColor").ToString(); }

    var linkHoverColor = string.Empty;
    if (HomePage.HasValue("linkHoverColor") && HomePage.GetPropertyValue<string>("linkHoverColor") == "0") { linkHoverColor = "#000"; } else if (HomePage.HasValue("linkHoverColor")) { linkHoverColor = "#" + HomePage.GetPropertyValue("linkHoverColor").ToString(); }
    
    var menuColor = string.Empty;
    if (HomePage.HasValue("menuLinkColor") && HomePage.GetPropertyValue<string>("menuLinkColor") == "0") { menuColor = "#000"; } else if (HomePage.HasValue("menuLinkColor")) { menuColor = "#" + HomePage.GetPropertyValue("menuLinkColor").ToString(); }
    
    <style>
        body{ color: @textColor; background: @backgroundColor; }
        h1, h2, h3, legend { color: @primaryColor; }
        a { color: @linkColor; }
        a:hover { color: @linkHoverColor; }
        button, input[type="submit"], .button { background: @backgroundColor; border-color: @menuColor; color: @textColor; }
        button:hover, input[type="submit"]:hover, .button:hover { background: @menuColor; color: @backgroundColor; }
        input, textarea, .dropdown { border-color: @menuColor; color: @primaryColor; }
        .dropdown span { color: @menuColor; }

        header { border-top-color: @primaryColor; }
        header h1 a, .menu a:hover, .footer-nav a:hover, .basket a:hover, .return:hover { color: @primaryColor; }
        .menu a, .footer-nav a, .footer-nav li, .mindfly, .basket, .basket a, .return { color: @menuColor; }
        .menu a:before, .menu a:hover::before, .footer-nav a:before, .footer-nav a:hover::before, .basket li:before { color: @menuColor; opacity: .3; }

        .social { background: @primaryColor; }
        .social a { color: @backgroundColor; }
        .social .search:hover { background: @textColor; }

        @if(CurrentPage.WillWork("banner")) { 
            IPublishedContent image = Umbraco.Media(CurrentPage.GetPropertyValue("banner")); 
            if(int.Parse(image.GetPropertyValue("umbracoHeight").ToString()) != -1)
            {
                @("#banner { height:" + image.GetPropertyValue("umbracoHeight") + "px;}")
            } else {
                @("#banner { height: 700px; }")
            }
        } else {
            @(string.Format(".merchHomePage #banner {{ height: 700px; background-color: {0}; }}", menuColor))
        }

        .arrow { background: @primaryColor; color: @backgroundColor; }
        .arrow:hover { background: #fff; color: @primaryColor; }

        .intro h1 { color: #fff; }
        #quick-links span { color: @primaryColor; background: rgba(255,255,255,.7) }

        .merchTextPage blockquote { border-color: @textColor; }

        .product-list .info, .product-list h2, .product-list .price, .related-products h3, .related-products .price { color: @backgroundColor; }
        .product-list .info::before, .related-products .info::before { background: @primaryColor; }
        .product-list em, .related-products em { color: @menuColor; }

        #primary .price { color: @textColor; }
        #primary .price:after, #primary h1:after { background: @menuColor; }

        .features li:before { background-color: @menuColor; opacity: .3; }

        .toggle, .toggle:hover { color: @textColor; background: @backgroundColor; }
        .toggle:before, .toggle:after { background: @menuColor; }
        
        .related-products li:first-child { background: @primaryColor; color: @backgroundColor; }
        .related-products li:first-child:after { border-left-color: @primaryColor; }

        .leaflet-container a { color: @linkColor; }

        .cart th, th { color: @textColor; }
        .cart button { color: @menuColor; }
        .variant { color: @menuColor; }
        .subtotal .amount { color: @primaryColor; }

        .checkout:before, .receipt:before { border-color: @menuColor; opacity: .3; }
        .checkout fieldset:after { background-color: @menuColor; opacity: .3; }
        .checkout .checkbox span:before { color: @menuColor; }
        .subtotal td:before, .total td:before { background: @menuColor; opacity: .3; }
        .checkout .total, .receipt .total { color: @primaryColor; }
        .checkout .dropdown .value.selected { color: @primaryColor; }

        .receipt h3 { color: @textColor; }

        @@media screen and (max-width: 60em){
            #banner { height: 500px !important; }
        }

        @@media screen and (max-width: 38em) {
            .related-products li:first-child:after { border-top-color: @primaryColor; border-left-color: transparent; }
        }

        @@media screen and (max-width: 27em) {
            .social { background-color: @primaryColor; }
            .count { background-color: @menuColor; color: @backgroundColor; }
            .count:hover { background-color: @primaryColor; }
        }
    </style>
}